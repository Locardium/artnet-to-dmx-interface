name: Build and Release Windows x64

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Build solution (Release x64)
        run: msbuild artnet-dmx.sln /p:Configuration=Release /p:Platform=x64

      - name: Copy EXE to flat artifact folder
        shell: powershell
        run: |
          New-Item -ItemType Directory -Path artifact_output -Force | Out-Null
          $exe = Get-ChildItem -Path . -Recurse -Filter '*.exe' |
                 Where-Object { $_.DirectoryName -match 'Release' } |
                 Select-Object -First 1
          if ($null -eq $exe) {
            Write-Error "No .exe found in Release folder"
            exit 1
          }
          $dest = "artifact_output\artnet-to-dmx-windows-x64-${{ github.ref_name }}.exe"
          Copy-Item $exe.FullName -Destination $dest

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release for ${{ github.ref_name }}.
            Build generated by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload EXE as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: artifact_output/artnet-to-dmx-windows-x64-${{ github.ref_name }}.exe
           asset_name: artnet-to-dmx-windows-x64-${{ github.ref_name }}.exe
           asset_content_type: application/octet-stream
